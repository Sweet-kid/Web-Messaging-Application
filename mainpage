#!/usr/bin/env perl

use strict;
use warnings;

use Mojolicious::Lite;
use DBI;
use Digest::SHA qw(sha256);

app->sessions->default_expiration(86400);
app->secret('MySecretKey');

my $dbh = DBI->connect("dbi:SQLite:database.db","","") or die "Could not connect";

helper db => sub { $dbh }; 

helper insertUsers => sub 
{
    my $self = shift;
    my $username = "username";
    my $insert = eval { $dbh->prepare('INSERT INTO users(username,password,loggedin) VALUES (?,?,?)') } || return 0;
    for( my $id = 1; $id <= 10; $id++ )
    {
	$insert->execute($username.$id, sha256($username.$id), "false") ;
    }
    
    return 1;
};

helper checkUserPass => sub
{
    my ($self, $username, $password) = @_;
    
    $password = sha256 $password;
    my $sth = eval { $dbh->prepare("SELECT rowid, password FROM users WHERE username=\"$username\"") } ;
    $sth->execute;
    my @row = $sth->fetchrow_array;

    my $rowid = $row[0];
    my $retrievedPass = $row[1];
    if( ($rowid ne "") && ($retrievedPass ne "") && ($retrievedPass eq $password) )
    {
	$self->session(rowid => $rowid);
	$self->session(username => $username);
	return 1;
    }
    else
    {
	return 0;
    }
};

helper getAllReplies => sub {
    my $self = shift;
    my $id = $self->session("rowid");
    my $sth = eval { $dbh->prepare("SELECT inbox.rowid, username, subject, date, time, read, message FROM inbox, users WHERE receiverId=='$id' and users.rowid==senderId;")} || return 0;
    $sth->execute;
    my $inboxData = $sth->fetchall_arrayref;
    $sth = eval { $dbh->prepare("SELECT count(rowid) FROM inbox WHERE receiverId=='$id';")} || return 0;
    $sth->execute;
    my @array = $sth->fetchrow_array();
    my $number = $array[0];
    $self->stash(inboxData => $inboxData);
    $self->stash(number => $number);
    $self->stash(visibility => "0" );
    return 1;
};

helper getNoOfUnReadMessages => sub {
    my $self = shift;
    my $id = $self->session('id');
    my $sth = eval { $dbh->prepare("SELECT count(rowid) FROM inbox WHERE receiverId=='$id' and read='false' ;")} || return 0;
    $sth->execute;
    my @array = $sth->fetchrow_array();
    my $unread = $array[0];
    $self->stash(unread => $unread);    
    return $unread;    
};

helper getSentMessages => sub {
    my $self = shift;
    my $id = $self->session("rowid");
    my $sth = eval { $dbh->prepare("SELECT sentMessages.rowid, username, subject, date, time, message FROM sentMessages, users WHERE senderId=='$id' and users.rowid==receiverId;")} || return 0;
    $sth->execute;
    my $sentData = $sth->fetchall_arrayref;    
    $sth = eval { $dbh->prepare("SELECT count(rowid) FROM sentMessages WHERE senderId=='$id';")} || return 0;
    $sth->execute;
    my @array = $sth->fetchrow_array();
    my $number = $array[0];
    $self->stash(sentData => $sentData);
    $self->stash(noOfSentMessages => $number);
    return 1;
};

helper getAllUsers => sub {
    my ($self, $rowid) = @_;
    my $sth = eval { $dbh->prepare("SELECT rowid, username FROM users WHERE rowid!=\"$rowid\"") } || return 0;
    $sth->execute;
    my $array = $sth->fetchall_arrayref;
    $self->stash(otherUsers => $array);
    return 1;
};

helper markread => sub {
    my ($self, $id) = @_;
    print "\nid = $id\n";
    my $sth = eval { $dbh->prepare("UPDATE inbox SET read='true' WHERE rowid='$id';") } || return 0;
    $sth->execute;
    return 1;
};

my $insert;
my $createDummyAccounts = 0;
while (1) {
    $insert = eval { $dbh->prepare('INSERT INTO users(username,password,loggedin) VALUES (?,?,?)') };
    last if $insert;

    warn "Creating tables\n";
    $createDummyAccounts = 1;
    $dbh->do('CREATE TABLE users(
rowid INTEGER PRIMARY KEY, 
username VARCHAR(30), 
password VARCHAR(256), 
loggedin BOOLEAN);');
    $dbh->do('CREATE TABLE inbox(
rowid INTEGER PRIMARY KEY,
senderId VARCHAR(30),
receiverId VARCHAR(30),
subject TEXT,
message TEXT, 
date DATE, 
time TIME,
read BOOLEAN,
FOREIGN KEY(senderId) REFERENCES users(id),
FOREIGN KEY(receiverId) REFERENCES users(id));');
    $dbh->do('CREATE TABLE sentMessages(
rowid INTEGER PRIMARY KEY,
senderId VARCHAR(30),
receiverId VARCHAR(30),
subject TEXT,
message TEXT, 
date DATE, 
time TIME,
FOREIGN KEY(senderId) REFERENCES users(id),
FOREIGN KEY(receiverId) REFERENCES users(id));');
}

my $username="username";
if( $createDummyAccounts )
{
    app->insertUsers;
}

any '/' => sub
{
    my $self = shift;
    $self->stash(error => "");
    if( isLoggedIn($self) )
    {
	$self->render('inbox/index');
    }
    else
    {
 	$self->redirect_to('/loginPage');
    }
};

any '/login' => sub {
    my $self = shift;
    if( isLoggedIn($self) )
    {
	$self->redirect_to('/inbox');
    }
    else
    {
	my $username = $self->param('username');
	my $password = $self->param('password');
	my $id;
	if( $self->checkUserPass($username, $password) )
	{
	    $self->session(username => $username);
	    $self->session(loggedIn => "true");
	    $self->redirect_to('/inbox');
	}
	else
	{
	    $self->flash(error => 'Invalid username/password');
	    $self->redirect_to('/loginPage');
	}
    }
};

any '/loginPage' => sub {
    my $self = shift;
    if( isLoggedIn($self) )
    {
	$self->redirect_to('/inbox');
    }
    else
    {
	$self->render('login/index');
    }
};

any '/inbox' => sub {
    my $self = shift;
    if( isLoggedIn($self) )
    {
	my $replies = $self->getAllReplies;
	$self->stash(visibility => "0");
	$self->render('inbox/index' );
    }
    else
    {
	$self->redirect_to('/loginPage');
    }
};

any '/sentMessages' => sub {
    my $self = shift;
    if( isLoggedIn($self) )
    {
	my $sentData = $self->getSentMessages;
	$self->render('sentMessages/index');
    }
    else
    {
	$self->redirect_to('/loginPage');
    }    
};

any '/sendMessages' => sub {
    my $self = shift;
    if( isLoggedIn($self) )
    {
	my $rowid = $self->session('rowid');
	if( $self->getAllUsers($rowid) )
	{
	    $self->render('sendMessages/index');
	}
    }
    else
    {
	$self->redirect_to('/loginPage');
    }
};

any '/sendSelMessages' => sub {
    my $self = shift;
    if( isLoggedIn($self) )
    {
	my $subject = $self->param('subject');
	my $origMessage = $self->param('message');
	my $username = $self->session("username");
	my $previousText = "$username wrote :\n";
	my $message = $previousText.$origMessage;
	my $insert1 = eval { $dbh->prepare('INSERT INTO inbox(senderId, receiverId, subject, message, date, time, read) VALUES (?,?,?,?,?,?,?)') } || die $!;
	my $date = getDate();
	my $time = getTime();

	my @params;
	my $i = 0;
	foreach( $self->param )
	{
	    if( $_ =~ /^selected\d+$/ )
	    { 
		$params[$i++] = $self->param($_);
		$insert1->execute($self->session("rowid"), $self->param($_), $subject, $message, $date, $time, "false");
	    }
	}
    
	$previousText = "You wrote :\n";
	$message = $previousText.$origMessage;
	my $insert2 = eval { $dbh->prepare('INSERT INTO sentMessages(senderId, receiverId, subject, message, date, time) VALUES (?,?,?,?,?,?)') } || die $!;

	foreach( @params )
	{
	    $insert2->execute($self->session("rowid"), $_, $subject, $message, $date, $time);
	}
    
	$self->redirect_to('/inbox');
    }
    else
    {
	$self->redirect_to('/loginPage');
    }
};

any '/logout' => sub {
    my $self = shift;
    $self->session(expires => 1);
    $self->redirect_to('/loginPage');
};

get '/replyForm' => sub 
{
    my $self = shift;
    if( isLoggedIn($self) )
    {
	foreach( $self->param )
	{
	    if( $self->param($_) && $_ =~ /^.*(\d+)$/ )
	    {
		my $senderId = $self->session('rowid');
		my $username = $self->session("username");
		my $origMessage = $self->param('textMessage'.$1);
		print "1 => $1\n";
		print "message => $origMessage\n";
		print "senderId => $senderId\n";
		my $id = $self->param('hidden'.$1);
		my $previousText = "\n$username wrote :\n";
		my $message = $previousText.$origMessage;
		my $date = getDate();
		my $time = getTime();

		my $select = eval { $dbh->prepare("SELECT senderId, message FROM sentMessages WHERE rowid='$1';") } || die $!;
		$select->execute;
		my @array = $select->fetchrow_array;
		my $receiverId = $array[0];
		print "array[0] => $array[0]\n";
		print "array[1] => $array[1]\n";
		my $newmessage = "$array[1].$message";

		$previousText = "\nYou wrote :\n";
		$message = $previousText.$origMessage;
		my $select2 = eval { $dbh->prepare("SELECT senderId, message FROM inbox WHERE rowid='$1';") } || die $!;
		$select2->execute;
		my @array2 = $select2->fetchrow_array;
		my $receiverId2 = $array2[0];
		print "array2[0] => $array2[0]\n";
		print "array2[1] => $array2[1]\n";
		my $newmessage2 = "$array2[1].$message";

		print "newMessage2 => $newmessage2\n";

		my $statement = "UPDATE inbox SET message=?, senderId=?, date=?, time=?, receiverId=? WHERE rowid=?";
		my $rv  = $dbh->do($statement, undef, $newmessage, $senderId, $date, $time, $receiverId, $1); 
		$DBI::err && die $DBI::errstr;		

		$statement = "UPDATE sentMessages SET message=?, senderId=?, date=?, time=?, receiverId=? WHERE rowid=?";
		$rv  = $dbh->do($statement, undef, $newmessage2, $senderId, $date, $time, $receiverId2, $1); 
		$DBI::err && die $DBI::errstr;		
		
		$self->redirect_to('/inbox');
	    }
	}
    }
    else
    {
	$self->redirect_to('/loginPage');
    }
};

sub getDate() {
    my @months = (
	"Jan",
	"Feb",
	"Mar",
	"Apr",
	"May",
	"Jun",
	"Jul",
	"Aug",
	"Sep",
	"Oct",
	"Nov",
	"Dec"
	);
    my @allArgs = localtime;
    my $year = $allArgs[5] + 1900;
    my $date = "$months[$allArgs[4]] $allArgs[3], $year"; 
    return $date;
};

sub getTime() {
    my @allArgs = localtime;
    my $year = $allArgs[5] + 1900;
    my ($hour, $minute, $second);

    my $zero = "0";
    if( $allArgs[2] < 10 )
    {
	$hour = $zero.$allArgs[2];
    }
    else
    {
	$hour = $allArgs[2];
    }
   
    if( $allArgs[1] < 10 )
    {
	$minute = $zero.$allArgs[1]
    }
    else
    {
	$minute = $allArgs[1];
    }

    if( $allArgs[0] < 10 )
    {
	$second = $zero.$allArgs[0]
    }
    else
    {
	$second = $allArgs[0];
    }

    my $time = "$hour:$minute:$second"; 
    print "$time\n";
    return $time;
};

sub isLoggedIn()
{
    my $self = $_[0];
    if( (defined $self->session('loggedIn')) && 
	($self->session('loggedIn') eq 'true') &&
	(defined $self->session('rowid')) &&
	($self->session('rowid') =~ /^\d+$/))
    {
	return 1;
    }
    else
    {
	return 0;
    }
}

app->start;

__DATA__

@@ login/index.html.ep
<!doctype html>
<html>
    <head>
    <script type="text/javascript" src="validateScript.js">
    </script>
    <style type="text/css">
    fieldset.center
    {
    margin-left:auto; 
    margin-right:auto;
    }    
    </style>
    <title>
    Login page
    </title>
    </head>
    <body style="background-color:black;color:white;">
    <h1 style="text-align:center;">
    My Messaging Application
    </h1>
    <br/>
    <br/>
    <hr/>
    <br/>
    <br/>
    <br/>
    <br/>
    <fieldset style="width:20%;float:right;">
    <legend><strong>Sign In</strong></legend>
    <form name="login" method="post" onsubmit="return validateForm()" action="<%=url_for('login')->to_abs%>">
    <legend>
    Username
    </legend>
    <input type="text" name="username" maxlength="30" style="width:100%;"/>
    <label id="usernameErr" style="text-color:red;">
    </label>
    <legend>
    Password
    </legend>
    <input type="password" name="password" maxlength="30" style="width:100%;"/>
    <label id="passErr" style="text-color:red;">
    </label>
    <br/>
    <br/>
    <legend>
    <input type="submit" value="Sign in" />
    </legend>
    </form>
    <label id="flashError" style="color:red;text-align:center;">
    <%= flash 'error' %> 
    </label>
    </fieldset>
    <br/>
    </body>
</html>

@@ sendMessages/index.html.ep
<html>
<head>
<title>
Send Messages@
<%= session 'username' %>
</title>
<script type="text/javascript" src="validateScript.js" >
</script>
</head>
<body>
<%= include 'header/index' %>
<form name="sendMessage" method="post" action="<%=url_for('sendSelMessages')->to_abs%>" onsubmit="return validateSendMsg(<%= session 'rowid' %>)">
<div style="float:left;">
Subject :
<br/>
<input type="text" name="subject" style="width:50%" />
<br/>
<br/>
<label id="msgErr">
Message Text :
</label>
<br/>
<textarea name="message" rows="20" cols="100">
</textarea>
<br/>
<input type="submit" value="Send" />
</div>
<table style="float:right;">
<th>
<td colspan="2" >
<b style="text-align:left;align:left;">
Recipients: </b>
</td>
</th>
<%= my $i; %>
% foreach my $row(@{$otherUsers}) { 
    <tr>
    % foreach my $text (@{$row}) { 
    % if( ($text =~ /^\d+$/) ) { 
    <td><input type="checkbox" name="selected<%= $text %>" value="<%= $text %>" /></td>
    % } else {
    <td><%= $text %></td>
    % }
    % }
    </tr>
    % }
</table>
</form>
</body>
</html>

@@ inbox/index.html.ep
<!doctype html>
<html>
    <head>
    <title>
    <%= session 'username' %>
    </title>
    <script type="text/javascript" src="sentMessage.js" ></script>
    </head>
    <body>
    <%= include 'header/index' %>
    % if( $number != 0 ) {
    % foreach my $row(@{$inboxData}) { 
    <table style="width:100%;" border="0" cellpadding="4" cellspacing="0">
    <tr height="1">
    <td bgcolor="#727272" colspan="3"></td>
    </tr>
    <tr bgcolor="#EEEEEE" style="height:0.5%">
    <form method="get" name="replyForm<%= @{$row}[0] %>" id="replyForm<%= @{$row}[0] %>" onsubmit="validateForm(<%= @{$row}[0] %>);" action="<%= url_for('replyForm')->to_abs;%>" >
    <td>
    <strong>
    Sender&nbsp;:&nbsp;
    </strong>
    <%= @{$row}[1] %>
    </td>
    <td>
    <input type="hidden" name="hidden<%= @{$row}[0] %>" />
    </td>
    <td style="text-align:right;align:right;">
    <input style="border:none;background:none;width:85px;" type="button" name="lnk<%= @{$row}[0] %>" value="[+]" onclick="toggle_visibility(<%= @{$row}[0] %>);" />
    </td>
    </tr>
    </table>
    <table name="tbl<%= @{$row}[0] %>" style="display:none;">
    <tr>
    <td style="align:left;text-align:left;">
    <strong>Subject&nbsp;:</strong>&nbsp;<%= @{$row}[2] %>
    </td>
    </tr>
    <tr>
    <td style="align:left;text-align:left;">
    <strong>Date&nbsp;:</strong>&nbsp;<%= @{$row}[3] %>
    </td>
    </tr>
    <tr>
    <td style="align:left;text-align:left;">
    <strong>Time&nbsp;:</strong>&nbsp;<%= @{$row}[4] %>
    </td>
    </tr>
    <tr>
    <td style="align:left;text-align:left;">
    <strong>Message&nbsp;:</strong>
    </td>
    </tr>
    <tr>
    <td>
<pre>
<%=@{$row}[6] %>
</pre>
    </td>
    </tr>
    <tr>
    <td id="msgErr<%= @{$row}[0] %>" >
    Message Text
    </td>
    </tr>
    <tr>
    <td name="replyField<%= @{$row}[0] %>" id="replyField<%= @{$row}[0] %>" >
    <textarea rows="15" cols="80" name="textMessage<%= @{$row}[0] %>" ></textArea>
    </td>
    </tr>
    <tr>
    <td>
    <input type="submit" value="Send Message"/>
    </td>
    </tr>
    </form>
    </table>
    % } 
% } else { 
    No messages
    % }
</body>
</html>
    
@@ sentMessages/index.html.ep
<!doctype html>
<html>
    <head>
    <script type="text/javascript" src="sentMessage.js" ></script> 
    <title>
    <%= session 'username' %>
    </title>
    </head>
    <body>
    <%= include 'header/index' %>
    % if( $noOfSentMessages != 0 ) {
    % foreach my $row(@{$sentData}) { 
    <table style="width:100%;" border="0" cellpadding="4" cellspacing="0">
    <tr height="1">
    <td bgcolor="#727272" colspan="3"></td>
    </tr>
    <tr bgcolor="#EEEEEE" height="15">
    <td><strong>To&nbsp;:&nbsp;</strong>
    <%= @{$row}[1] %>
    </td>
    <td style="align:right;text-align:right">
    <input style="border:none;background:none;width:85px;" name="lnk<%= @{$row}[0] %>" type="button" value="[+]" onclick="toggle_visibility(<%= @{$row}[0] %>);">
    </td>
    </tr>
    <tr style="display:none" name="tbl<%= @{$row}[0] %>"> 
    <td colspan="2" style="text-align:left;align:left;" >
    <table>
    <tr>
    <td style="align:left;text-align:left"><strong>Subject &nbsp;:</strong> &nbsp;<%= @{$row}[2] %>
    </tr>
    <tr>
    <td style="align:left;text-align:left"><strong>Date &nbsp;:</strong> &nbsp; <%= @{$row}[3] %>
    </td>
    </tr>
    <tr>
    <td style="align:left;text-align:left"><strong>Time &nbsp;:</strong> <%= @{$row}[4] %>
    </td>
    </tr>
    <tr>
    <td>
    <strong>
    Message :
    </strong>
    </td>
    </tr>
    <tr>
    <td style="align:left;text-align:left;">
    <pre style="font-size:120%;font-family:helvetica;">
<%= @{$row}[5] %>
</pre>
    </td>
    </tr>
    </table>
    </td>
    </tr>
    </table>
    % } 
    % } else { 
    No messages 
    % }
    </body>
</html>
    
@@ header/index.html.ep
    <nav style="float:right;" >    
    <%= link_to "Inbox" => 'inbox' %> 
    &nbsp; | &nbsp;
    <%= link_to "Send Messages" => 'sendMessages' %>
    &nbsp; | &nbsp;
    <%= link_to "Sent Messages" => 'sentMessages' %>
    &nbsp; | &nbsp;
    <%= link_to Logout => 'logout' %>
    </nav>
    <br/>
    <hr/>

@@ validateScript.js    

function validateForm()
{
  var username = document.forms["login"]["username"].value;
  var password = document.forms["login"]["password"].value;
  var blank = true;
  var userErr = document.getElementById('usernameErr');
  var passErr = document.getElementById('passErr');
  var flashErr = document.getElementById('flashError');
  flashErr.innerHTML = "";
  
  if( username == null || username == "")
  {
      userErr.innerHTML = "<p style='color:red'>Please enter the username</p>";
      blank = false;
  }
  else
  {
      userErr.innerHTML = "";      
  }

  if( password == null || password == "")
  {
      passErr.innerHTML = "<p style='color:red'>Please enter the password</p>";
      blank = false;
  }
  else
  {
      passErr.innerHTML = "";      
  }

  return blank;
}

function validateSendMsg(id)
{
    var form = document.forms["sendMessage"];
    var message = document.forms["sendMessage"]["message"].value;
    var all = document.forms["sendMessage"].elements;
    var size = all.length;
    var selected = false;
    var msgErr = document.getElementById('msgErr');

    for( var i = 1; i <= size; i++ )
    {
	if( i != id )
	{
	    try
	    {
		var checkbox = form.elements['selected' + i];
		if( checkbox != null || checkbox != "" )
		{
		    if( checkbox.checked == true )
		    {
			selected = true;
			break;
		    }
		}
	    }
	    catch(e)
	    {
		continue;
	    }
	}
    }

    if( !selected )
    {
	msgErr.innerHTML = "Message Text :<p style='color:red'>No recepients selected</p>";
	return false;
    }
    else
    {
	msgErr.innerHTML = "Message Text :";
    }

    var newstr = message.replace(/(\r\n|\n|\r)/gm,"");
    newstr = newstr.replace(/^\s+$/,"");
    if( newstr == "" || newstr == null )
    {
	msgErr.innerHTML = "Message Text :<p style='color:red'>Please enter text for your message</p>";
	return false;
    }
    else
    {
	msgErr.innerHTML = "Message Text :";
	return true;
    }
}

function isAnInt(element) 
{
    return (parseInt(element) === element);
}

function sh(form) 
{
    for (var i = 0; i < form.sizes.length; i++) 
    {
	if (form.sizes[i].checked) {
	    break;
	}
    }
} 

@@ sentMessage.js

function toggle_visibility(id)
{
    var array1 = document.getElementsByName("tbl" + id);
    var array2 = document.getElementsByName("lnk" + id);
    array1[0].style.display = array1[0].style.display == "block" ? "none" : "block";
    array2[0].value = array2[0].value == "[-]" ? "[+]" : "[-]";
}

textAreaCreated = false;
function createATextArea(id)
{
    if( textAreaCreated == false )
    {
	var ta = document.getElementById('textMessage' + id);
	ta.style.display = block;
	var replyLink = document.getElementsByName("replyLink" + id);
	var replyButton = document.getElementsByName("submitButton" + id);
	replyLink[0].style.display = "none";
	replyButton[0].style.display = "block";
	var msgErr = document.getElementById("msgErr" + id);
	msgErr.style.display = "block";
	textAreaCreated="true";
    }
}

function validateForm(id)
{
    var message = document.forms["replyForm" + id]["textMessage" + id].value;
    var msgErr = document.getElementById('msgErr' + id);
    var newstr = message.replace(/(\r\n|\n|\r)/gm,"");
    newstr = newstr.replace(/^\s+$/,"");
    if( newstr == "" || newstr == null )
    {
	var label = document.createElement("label");
	label.setAttribute("style","color:red");
	label.appendChild(document.createTextNode("Please enter text for your message"));
	msgErr.appendChild(label);
	return false;
    }
    else
    {
	msgErr.innerHTML = "Message Text :";
	return true;
    }
}
