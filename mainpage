#!/usr/bin/env perl

package grabhalo;

use strict;
use warnings;

use Mojolicious::Lite;
use DBI;
use Digest::SHA qw(sha256);

app->sessions->default_expiration(86400);
app->secret('MySecretKey');

my $dbh = DBI->connect("dbi:SQLite:database.db","","") or die "Could not connect";

# shortcut for use in template
helper db => sub { $dbh }; 

my $insert;
my $createDummyAccounts = 0;
while (1) {
  # create insert statement
    $insert = eval { $dbh->prepare('INSERT INTO users(username,password,loggedin) VALUES (?,?,?)') };
  # break out of loop if statement prepared
    last if $insert;

  # if statement didn't prepare, assume its because the table doesn't exist
    warn "Creating tables\n";
    $createDummyAccounts = 1;
    $dbh->do('CREATE TABLE users(
rowid INTEGER PRIMARY KEY, 
username VARCHAR(30), 
password VARCHAR(256), 
loggedin BOOLEAN);');
    $dbh->do('CREATE TABLE messages(
rowid INTEGER PRIMARY KEY,
senderId VARCHAR(30),
receiverId VARCHAR(30),
subject TEXT,
message TEXT, 
date DATE, 
time TIME,
read BOOLEAN,
FOREIGN KEY(senderId) REFERENCES users(id),
FOREIGN KEY(receiverId) REFERENCES users(id));');
}

my $username="username";
if( $createDummyAccounts )
{
    for( my $id = 1; $id <= 10; $id++ )
    {
	$insert->execute($username.$id, sha256($username.$id), "false") ;
    }
}

any '/' => sub
{
    my $self = shift;
    $self->stash(error => "");
    if( !isLoggedIn($self) )
    {
 	$self->redirect_to('/loginPage');
    }
};

any '/login' => sub {
    my $self = shift;
    if( !isLoggedIn($self) )
    {
	my $username = $self->param('username');
	my $password = $self->param('password');
	my $id;
#	checkUserPass($self, $username, $password, \$id);
	if( checkUserPass($self, $username, $password) )
	{
	    $self->session(username => $username);
	    $self->session(loggedIn => "true");
	    $self->redirect_to('/inbox');
	}
	else
	{
	    $self->flash(error => 'Invalid username/password');
	    $self->redirect_to('/loginPage');
	}
    }
    else
    {
	$self->redirect_to('/inbox');
    }
};

any '/loginPage' => 'login/index';

any '/inbox' => sub {
    my $self = shift;
    if( !isLoggedIn($self) )
    {
	$self->redirect_to('/loginPage');
    }
    else
    {
	$self->render('inbox/index');
    }
};

any '/sendMessages' => sub {
    my $self = shift;
    if( (defined $self->session('loggedIn')) && ($self->session('loggedIn') eq 'true'))
    {
	my $username = $self->session('username');
	if( getAllUsers($self, $username) )
	{
	    $self->render('sendMessages/index');
	}
    }
    else
    {
	$self->redirect_to('/loginPage');
    }
};

any '/sendSelMessages' => sub {
    my $self = shift;
    if( (defined $self->session('loggedIn')) && ($self->session('loggedIn') eq 'true'))
    {
	my $subject = $self->param('subject');
	my $message = $self->param('message');
	# my $selected1 = $self->param('selected');
	# my $selected2 = $self->param('selected');
	# $self->session(selected1 => $selected1);
	# $self->session(selected2 => $selected2);
	my $insert2 = eval { $dbh->prepare('INSERT INTO messages(senderId, receiverId, subject, message, date, time, read) VALUES (?,?,?,?,?,?,?)') } || print $!;
    
	my $date = getDate();
	my $time = getTime();

	foreach( $self->param )
	{
	    if( $_ =~ /^selected\d+$/ )
	    { 
		$insert2->execute($self->session("rowid"), $self->param($_), $subject, $message, $date, $time, "false");
	    }
	}
    
	$self->redirect_to('/inbox');
    }
    else
    {
	$self->redirect_to('/loginPage');
    }
};

any '/testSendSel' => sub {
    my $self = shift;
    $self->render('testSendSel/index');
};

any '/logout' => sub {
    my $self = shift;
    $self->session("loggedIn");
    $self->session("rowid");
    $self->redirect_to('/loginPage');
};

any '/inbox' => sub {
    my $self = shift;
    
};

any '/testdb' => sub {
    my $self = shift;
    $self->render('testdb/index');
};

sub getDate() {
    my @months = (
	"Jan",
	"Feb",
	"Mar",
	"Apr",
	"May",
	"Jun",
	"Jul",
	"Aug",
	"Sep",
	"Oct",
	"Nov",
	"Dec"
	);
    my @allArgs = localtime;
    my $year = $allArgs[5] + 1900;
    my $date = "$months[$allArgs[4]] $allArgs[3], $year"; 
    return $date;
};

sub getTime() {
    my @allArgs = localtime;
    my $year = $allArgs[5] + 1900;
    my $date = "$allArgs[2]:$allArgs[1]:$allArgs[0]"; 
    return $date;
};

sub getAllUsers()
{
    my ($self, $username) = @_;
    my $sth = eval { $dbh->prepare("SELECT rowid, username FROM users WHERE username!=\"$username\"") } ;
    $sth->execute;
    my $array = $sth->fetchall_arrayref;
    $self->stash(otherUsers => $array);
    return 1;
}

sub isLoggedIn()
{
    my $self = $_[0];
    if( (defined $self->session('loggedIn')) && ($self->session('loggedIn') eq 'true'))
    {
	return 1;
    }
    else
    {
	return 0;
    }
}

sub checkUserPass()
{
    my ($self, $username, $password, $rowid) = @_;
    $password = sha256 $password;
    my $sth = eval { $dbh->prepare("SELECT rowid, password FROM users WHERE username=\"$username\"") } ;
    $sth->execute;
    my @row = $sth->fetchrow_array;
    # my $i = 0;
    # foreach my $val (@rows) 
    # {
    # 	$self->session("value".$i => $val);
    # 	$i++;
    # }

    # $self->session(foo => 'bar');
    # $self->session(pass => $password );

    # if( $password eq $self->session('value1') )
    # {
    # 	$self->session(equal => "true");
    # }
    # else
    # {
    # 	$self->session(equal => "false");	
    # }

    $rowid = $row[0];
    my $retrievedPass = $row[1];
    # $self->session(rowid => $rowid);
    # $self->session(pass => $retrievedPass);
    if( ($rowid ne "") && ($retrievedPass ne "") && ($retrievedPass eq $password) )
    {
	$self->session(rowid => $rowid);
	$self->session(username => $username);
	return 1;
#	$self->session(if1 => "true");	
    }
#     if( $retrievedPass ne "" )
#     {
# 	$self->session(if2 => "true");		
#     }
#     if($retrievedPass eq $password) 
#     {
# 	$self->session(id => $id);
# 	# $self->s(password => $retrievedPass);
# #	$self->redirect_to('/testdb');
# 	return 1;
#     }
    else
    {
	return 0;
    }
#    $self->redirect_to('/testdb');
};

app->start;

__DATA__

@@ testSendSel/index.html.ep
<html>
<body>
<%= session 'selected1' %>
<br/>
<%= session 'selected2' %>
</body>
</html>

@@ testdb/index.html.ep
<html>
<body>
id
<%= session 'if1' %>
<br/>
<%= session 'if2' %>
<br/>
pass
<%= session 'rowid' %>
<br/>
<%= session 'pass' %>
<br/>
<%= session 'equal' %>
</body>
</html>

@@ login/index.html.ep
<!doctype html>
<html>
    <head>
    <script type="text/javascript" src="validateScript.js">
    </script>
    <title>
    Login page
    </title>
    </head>
    <body>
    <form name="login" method="post" onsubmit="return validateForm()" action="<%=url_for('login')->to_abs%>">
    <table>
    <tr>
    <td>
    Username
    </td>
    <td>
    <input type="text" name="username" maxlength="30"/>
    </td>
    <td id="usernameErr" style="text-color:red;">
    </td>
    </tr>
    <tr>
    <td>
    Password
    </td>
    <td>
    <input type="password" name="password" maxlength="30"/>
    </td>
    <td id="passErr" style="text-color:red;">
    </td>
    </tr>
    <tr>
    <td>
    <input type="submit" value="Login" />    
    </td>
    <td>
    <input type="reset" value="Reset" />
    </td>
    </tr>
    </table>
    </form>
    <br/>
    <label id="flashError" style="text-color:red">
    <%= flash 'error' %> 
    </label>
    </body>
</html>

@@ sendMessages/index.html.ep
<html>
<head>
<title>
Send Messages@
<%= session 'username' %>
</title>
<script type="text/javascript" src="validateScript.js" >
</script>
</head>
<body>
<%= include 'header/index' %>
<form name="sendMessage" method="post" action="<%=url_for('sendSelMessages')->to_abs%>" onsubmit="return validateSendMsg(<%= session 'rowid' %>)">
<div style="float:left;">
Subject :
<br/>
<input type="text" name="subject" style="width:50%" />
<br/>
<br/>
<label id="msgErr">
Message Text :
</label>
<br/>
<textarea name="message" rows="20" cols="100">
</textarea>
<br/>
<input type="submit" value="Send" />
</div>
<table style="float:right;">
<th>
<td colspan="2" >
<b style="text-align:left;align:left;">
All users
</b>
</td>
</th>
<%= my $i; %>
% foreach my $row(@{$otherUsers}) { 
    <tr>
    % foreach my $text (@{$row}) { 
    % if( ($text =~ /^\d+$/) ) { 
    <td><input type="checkbox" name="selected<%= $text %>" value="<%= $text %>" /></td>
    % } else {
    <td><%= $text %></td>
    % }
    % }
    </tr>
    % }
</table>
</form>
</body>
</html>
    
@@ inbox/index.html.ep
<!doctype html>
<html>
    <head>
    <title>
    <%= session 'username' %>
    </title>
    </head>
    <body>
    <%= include 'header/index' %>
    </body>
</html>

@@ header/index.html.ep
    <nav style="float:right;" >    
    <%= link_to "Inbox" => 'inbox' %>
    &nbsp; | &nbsp;
    <%= link_to "Send Messages" => 'sendMessages' %>
    &nbsp; | &nbsp;
    <%= link_to "Sent Messages" => 'sentMessages' %>
    &nbsp; | &nbsp;
    <%= link_to "Account Settings" => 'sendMessages' %>
    &nbsp; | &nbsp;
    <%= link_to Logout => 'logout' %>
    </nav>
    <br/>
    <hr/>

@@ validateScript.js    

function validateForm()
{
  alert("validateForm.");
  var username = document.forms["login"]["username"].value;
  var password = document.forms["login"]["password"].value;
  var blank = true;
  var userErr = document.getElementById('usernameErr');
  var passErr = document.getElementById('passErr');
  var flashErr = document.getElementById('flashError');
  flashErr.innerHTML = "";
  
  if( username == null || username == "")
  {
      alert("username = " + username);
      userErr.innerHTML = "Please enter the username";
      blank = false;
  }
  else
  {
      userErr.innerHTML = "";      
  }

  if( password == null || password == "")
  {
      alert("password = " + password);
      passErr.innerHTML = "Please enter the password";
      blank = false;
  }
  else
  {
      passErr.innerHTML = "";      
  }

  return blank;
}

function validateSendMsg(id)
{
    alert("validateSendMsg");
    var form = document.forms["sendMessage"];
    var message = document.forms["sendMessage"]["message"].value;
    var all = document.forms["sendMessage"].elements;
    var size = all.length;
    var selected = false;
    var msgErr = document.getElementById('msgErr');

    alert(form.elements["selected0"].checked);

    for( var i = 0; i < size; i++ )
    {
	if( i != id )
	{
	    try
	    {
		var checkbox = form.elements['selected' + i];
		if( checkbox != null || checkbox != "" )
		{
		    if( checkbox.checked == true )
		    {
			alert(checkbox.value);
			selected = true;
			break;
		    }
		}
	    }
	    catch(e)
	    {
		continue;
	    }
	}
    }

    if( !selected )
    {
	msgErr.innerHTML = "Message Text :<br/>No recepients selected";
	return false;
    }
    else
    {
	msgErr.innerHTML = "Message Text :";
    }

    var re = "/\s+/gm";
    var newstr = message.replace(re, "");
    if( newstr == "" || newstr == null )
    {
	msgErr.innerHTML = "Message Text :<br/>Please enter text for your message";
	return false;
    }
    else
    {
	msgErr.innerHTML = "Message Text :";
	return true;
    }
}

function isAnInt(element) 
{
    return (parseInt(element) === element);
}

function sh(form) 
{
    for (var i = 0; i < form.sizes.length; i++) 
    {
	if (form.sizes[i].checked) {
	    break;
	}
    }
    alert(form.sizes[i].value);
} 
